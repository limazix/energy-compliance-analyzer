
name: Run Integration Tests

on:
  push:
    branches:
      - main
      - staging
      - development
  pull_request:
    branches:
      - main
      - staging
      - development

jobs:
  test_production:
    name: Test (Production Branch)
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main')
    runs-on: ubuntu-latest
    environment: production 
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Next.js app dependencies
        run: npm ci
      - name: Install Firebase Functions dependencies
        run: npm ci --prefix functions
      - name: Build Firebase Functions Shared Files (for Emulators)
        run: npm run build:shared --prefix functions
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Get Firebase CLI version
        id: firebase_version
        run: echo "CLI_VERSION=$(firebase --version)" >> $GITHUB_OUTPUT
      - name: Cache Firebase Emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ steps.firebase_version.outputs.CLI_VERSION }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-
      - name: Run tests with Firebase Emulators (Production Config)
        run: npm test
        env:
          CI: true
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          FIRESTORE_EMULATOR_HOST: ${{ secrets.FIRESTORE_EMULATOR_HOST }}
          FIREBASE_AUTH_EMULATOR_HOST: ${{ secrets.FIREBASE_AUTH_EMULATOR_HOST }}
          FIREBASE_STORAGE_EMULATOR_HOST: ${{ secrets.FIREBASE_STORAGE_EMULATOR_HOST }}
          FIREBASE_DATABASE_EMULATOR_HOST: ${{ secrets.FIREBASE_DATABASE_EMULATOR_HOST }}
          FUNCTIONS_EMULATOR_HOST: ${{ secrets.FUNCTIONS_EMULATOR_HOST }}
          FIREBASE_FUNCTIONS_EMULATOR_ORIGIN: ${{ secrets.FIREBASE_FUNCTIONS_EMULATOR_ORIGIN }}
          GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT }}
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          FIREBASE_PROJECT_ID_INTERNAL: ${{ secrets.GCLOUD_PROJECT }} 
          NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}

  test_staging:
    name: Test (Staging Branch)
    if: github.ref == 'refs/heads/staging' || (github.event_name == 'pull_request' && github.base_ref == 'staging')
    runs-on: ubuntu-latest
    environment: staging 
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Next.js app dependencies
        run: npm ci
      - name: Install Firebase Functions dependencies
        run: npm ci --prefix functions
      - name: Build Firebase Functions Shared Files (for Emulators)
        run: npm run build:shared --prefix functions
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Get Firebase CLI version
        id: firebase_version
        run: echo "CLI_VERSION=$(firebase --version)" >> $GITHUB_OUTPUT
      - name: Cache Firebase Emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ steps.firebase_version.outputs.CLI_VERSION }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-
      - name: Run tests with Firebase Emulators (Staging Config)
        run: npm test
        env:
          CI: true
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          FIRESTORE_EMULATOR_HOST: ${{ secrets.FIRESTORE_EMULATOR_HOST }}
          FIREBASE_AUTH_EMULATOR_HOST: ${{ secrets.FIREBASE_AUTH_EMULATOR_HOST }}
          FIREBASE_STORAGE_EMULATOR_HOST: ${{ secrets.FIREBASE_STORAGE_EMULATOR_HOST }}
          FIREBASE_DATABASE_EMULATOR_HOST: ${{ secrets.FIREBASE_DATABASE_EMULATOR_HOST }}
          FUNCTIONS_EMULATOR_HOST: ${{ secrets.FUNCTIONS_EMULATOR_HOST }}
          FIREBASE_FUNCTIONS_EMULATOR_ORIGIN: ${{ secrets.FIREBASE_FUNCTIONS_EMULATOR_ORIGIN }}
          GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT }}
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          FIREBASE_PROJECT_ID_INTERNAL: ${{ secrets.GCLOUD_PROJECT }}
          NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}

  test_development:
    name: Test (Development Branch)
    if: github.ref == 'refs/heads/development' || (github.event_name == 'pull_request' && github.base_ref == 'development')
    runs-on: ubuntu-latest
    environment: development 
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Next.js app dependencies
        run: npm ci
      - name: Install Firebase Functions dependencies
        run: npm ci --prefix functions
      - name: Build Firebase Functions Shared Files (for Emulators)
        run: npm run build:shared --prefix functions
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Get Firebase CLI version
        id: firebase_version
        run: echo "CLI_VERSION=$(firebase --version)" >> $GITHUB_OUTPUT
      - name: Cache Firebase Emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ steps.firebase_version.outputs.CLI_VERSION }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-
      - name: Run tests with Firebase Emulators (Development Config)
        run: npm test
        env:
          CI: true
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          FIRESTORE_EMULATOR_HOST: ${{ secrets.FIRESTORE_EMULATOR_HOST }}
          FIREBASE_AUTH_EMULATOR_HOST: ${{ secrets.FIREBASE_AUTH_EMULATOR_HOST }}
          FIREBASE_STORAGE_EMULATOR_HOST: ${{ secrets.FIREBASE_STORAGE_EMULATOR_HOST }}
          FIREBASE_DATABASE_EMULATOR_HOST: ${{ secrets.FIREBASE_DATABASE_EMULATOR_HOST }}
          FUNCTIONS_EMULATOR_HOST: ${{ secrets.FUNCTIONS_EMULATOR_HOST }}
          FIREBASE_FUNCTIONS_EMULATOR_ORIGIN: ${{ secrets.FIREBASE_FUNCTIONS_EMULATOR_ORIGIN }}
          GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT }}
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          FIREBASE_PROJECT_ID_INTERNAL: ${{ secrets.GCLOUD_PROJECT }}
          NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}
