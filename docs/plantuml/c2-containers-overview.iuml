@startuml C2 - Container Overview - Energy Compliance Analyzer
' Remote includes with full URLs
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml
' Include specific service icon sets as needed:
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Firebase/Firebase.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Compute/CloudFunctions.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/AI_and_Machine_Learning/VertexAI.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Mobile/AppHosting.puml

!include <C4/C4_Container>

title Container Diagram for Energy Compliance Analyzer

Person_Ext(user, "Energy Sector User", "Uploads CSVs, views reports, interacts via chat.")

System_Ext(google_ai, "Google AI (Gemini)", "Provides LLM for Genkit flows.")

System_Boundary(b1, "Energy Compliance Analyzer System") {
    ContainerGCP(frontend_app, "Frontend Web App", "Next.js, React, ShadCN", "Provides UI for all user interactions. Hosted on Firebase App Hosting.", $sprite="gcp/Mobile/AppHosting")
    ContainerGCP(server_actions, "Backend API", "Next.js Server Actions, Genkit", "Handles client requests, report chat AI, DB/Storage interactions. Runs on App Hosting.", $sprite="gcp/Mobile/AppHosting")
    ContainerDbGCP(firestore_db, "Main Database", "Firebase Firestore", "Stores analysis metadata, status, structured reports, tags, user data.", $sprite="gcp/Firebase/Firestore")
    ContainerDbGCP(storage_db, "File Storage", "Firebase Storage", "Stores uploaded CSV files and generated MDX reports.", $sprite="gcp/Firebase/CloudStorage")
    ContainerDbGCP(rtdb, "Chat Database", "Firebase Realtime Database", "Stores chat history for report interactions.", $sprite="gcp/Firebase/RealtimeDatabase")
    ContainerQueueGCP(functions_app, "Background Processing", "Firebase Functions (Node.js, Genkit)", "Executes AI pipeline for CSV analysis, report generation, and review.", $sprite="gcp/Compute/CloudFunctions")
    ContainerGCP(auth_service, "Authentication Service", "Firebase Authentication", "Manages user authentication via Google Sign-In.", $sprite="gcp/Firebase/Authentication")
}

' Relationships
Rel(user, frontend_app, "Uses", "HTTPS")

Rel(frontend_app, server_actions, "Invokes", "Next.js Server Actions")
Rel(frontend_app, auth_service, "Authenticates via", "Firebase SDK")
Rel(frontend_app, rtdb, "Listens for chat updates, Sends messages", "Firebase SDK") ' Chat UI directly interacts with RTDB

Rel(server_actions, firestore_db, "Reads/Writes Analysis Data & Tags")
Rel(server_actions, storage_db, "Reads/Writes MDX Reports")
Rel(server_actions, rtdb, "Writes User/AI Messages, Updates Chat")
Rel(server_actions, google_ai, "Calls for Chat Orchestration (Genkit)", "API")
' server_actions trigger functions_app indirectly via Firestore status update
Rel(server_actions, firestore_db, "Updates status to trigger Functions")

Rel(functions_app, storage_db, "Reads CSV Data, Writes MDX Reports")
Rel(functions_app, firestore_db, "Reads Analysis Config, Writes Results & Status")
Rel(functions_app, google_ai, "Calls for AI Pipeline (Genkit)", "API")

' Firestore triggers Functions
firestore_db ..> functions_app : "Triggers on document update (e.g., status change)"

@enduml
