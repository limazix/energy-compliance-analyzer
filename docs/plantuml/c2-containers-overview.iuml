@startuml
!define GCPPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include GCPPuml/GCPC4Integration.puml
!include GCPPuml/IconPack.puml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title Container diagram for Energy Compliance Analyzer

Person(user, "User", "Interacts with the system")

System_Boundary(eca_system, "Energy Compliance Analyzer") {
    Container(frontend, "Frontend Web App", "Next.js, React, ShadCN UI", "User interface for uploads, dashboards, report viewing, and chat. Hosted on Firebase App Hosting.")
    Container(backend_api, "Backend API", "Next.js Server Actions", "Handles client requests, orchestrates chat AI, manages Firestore/Storage interactions for UI. Runs on Firebase App Hosting.")
    ContainerDb(firestore_db, "Main Database", "Firebase Firestore (GCP)", "Stores analysis metadata, status, structured reports, user data, tags.")
    ContainerDb(rtdb, "Chat Database", "Firebase Realtime Database (GCP)", "Stores real-time chat messages for report interaction.")
    ContainerDb(storage, "File Storage", "Firebase Storage (GCP)", "Stores uploaded CSVs and generated MDX/PDF reports.")
    Container(functions, "Background Processing", "Firebase Functions (GCP)", "Node.js, Genkit. Handles heavy data processing, AI pipeline execution (data summary, regulation ID, report generation, review).")
    Container(auth_service, "Authentication Service", "Firebase Authentication (GCP)", "Manages user authentication via Google Sign-In.")
}

System_Ext(google_ai, "Google AI (Gemini)", "External AI models for Genkit flows")

Rel(user, frontend, "Uses", "HTTPS")
Rel(frontend, backend_api, "Calls Server Actions", "HTTPS/RPC")
Rel(frontend, rtdb, "Reads/Writes Chat Messages", "WebSockets")
Rel(frontend, auth_service, "Authenticates via")

Rel(backend_api, firestore_db, "Reads/Writes")
Rel(backend_api, storage, "Reads MDX reports")
Rel(backend_api, rtdb, "Writes Chat Messages, Reads Context")
Rel(backend_api, google_ai, "Calls for Chat Orchestrator Agent")
Rel(backend_api, auth_service, "Verifies User")

Rel(functions, firestore_db, "Triggered by, Reads/Writes")
Rel(functions, storage, "Reads CSVs, Writes MDX/PDFs")
Rel(functions, google_ai, "Calls for Analysis Pipeline Agents")

@enduml