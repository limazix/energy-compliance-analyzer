@startuml C2 - Container Overview - Energy Compliance Analyzer
!define GCP_SPRITES_LOCATION https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml

' Include specific GCP service icons needed for this diagram
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Mobile/Firebase.puml ' For Firebase App Hosting
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Identity_Security/FirebaseAuthentication.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Databases/Firestore.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Databases/FirebaseRealtimeDatabase.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Storage/CloudStorage.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Compute/CloudFunctions.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/AI_Machine_Learning/VertexAI.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!include DEVICONS/react.puml
!include DEVICONS/google.puml

LAYOUT_WITH_LEGEND()

Person(user, "User", "Electrical sector professional.")

System_Ext(googleAI, "Google AI (Gemini Models)", "LLM for AI features.", $sprite=$vertex_ai)
System_Ext(aneelRegs, "ANEEL Regulations", "External source of compliance rules.")

System_Boundary(systemBoundary, "Energy Compliance Analyzer System") {
    Container(frontendApp, "Frontend Web App", "Next.js, React, ShadCN, Tailwind", "User interface for uploads, visualization, and interaction. Hosted on Firebase App Hosting.", $sprite=$react_100)
    Container(serverActions, "Backend API", "Next.js Server Actions, Genkit", "Handles client requests, orchestrates chat AI, interacts with Firebase services.", $sprite=$firebase) ' Using general Firebase for App Hosting backend part
    ContainerDb(firestoreDb, "Main Database", "Firebase Firestore", "Stores analysis metadata, status, structured reports, tags.", $sprite=$firestore)
    ContainerDb(rtdb, "Chat Database", "Firebase Realtime Database", "Stores real-time chat history for reports.", $sprite=$firebase_realtime_database)
    Container(storage, "File Storage", "Firebase Storage", "Stores uploaded CSVs and generated MDX reports.", $sprite=$cloud_storage)
    Container(functions, "Background Processing", "Firebase Functions, Genkit", "Executes AI analysis pipeline (data summary, regulation ID, report generation/review).", $sprite=$cloud_functions)
    Container(authService, "Authentication Service", "Firebase Authentication", "Manages user login and identity.", $sprite=$firebase_auth)
}

' User Interactions
Rel(user, frontendApp, "Uploads CSV, Views Reports, Manages Analyses, Chats")

' Frontend to Backend/Auth
Rel(frontendApp, serverActions, "Makes API calls (uploads, chat, report data)", "HTTPS/Server Actions")
Rel(frontendApp, authService, "Authenticates user", "Firebase SDK")
Rel(frontendApp, storage, "Uploads CSV files directly", "Firebase SDK")
Rel(frontendApp, rtdb, "Syncs chat messages", "Firebase SDK (WebSocket)")

' Server Actions to Firebase Services & AI
Rel(serverActions, firestoreDb, "Manages analysis records, tags")
Rel(serverActions, rtdb, "Saves chat history, streams AI responses")
Rel(serverActions, storage, "Retrieves MDX report URLs")
Rel(serverActions, googleAI, "Orchestrates report chat AI (Genkit)")
Rel(serverActions, authService, "Validates user identity") ' Implicitly, via NextAuth or token validation if needed

' Firestore Triggers Functions
Rel(firestoreDb, functions, "Triggers analysis processing on status update")

' Functions to Firebase Services & AI
Rel(functions, firestoreDb, "Updates analysis progress, results, errors")
Rel(functions, storage, "Reads CSVs, Writes MDX reports")
Rel(functions, googleAI, "Executes AI analysis pipeline (Genkit)")
Rel(functions, aneelRegs, "Applies compliance rules (conceptual)")

@enduml
