@startuml C3 - Frontend Web App Components - Energy Compliance Analyzer
' Remote includes with full URLs
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml
' No specific GCP icons needed here directly, GCPC4Integration provides C4 macros

!include <C4/C4_Component>

title Component Diagram for Frontend Web App (Next.js/React)

package "User Interface (React Components)" <<Rectangle>> {
    Component(authUI, "Authentication UI", "React, ShadCN", "Handles login/logout buttons, user profile display.")
    Component(fileUploadUI, "Upload UI (NewAnalysisForm)", "React, ShadCN", "Manages CSV file selection, metadata input, and upload initiation.")
    Component(analysisListUI, "Analysis Listing UI", "React, ShadCN", "Displays list of past analyses (accordion).")
    Component(analysisViewUI, "Analysis View UI", "React, ShadCN", "Shows details of a selected analysis (progress, results, actions).")
    Component(reportViewUI, "Report View UI (ReportPage)", "React, Next-MDX-Remote", "Renders MDX reports, integrates chat.")
    Component(reportChatUI, "Report Chat UI", "React, ShadCN", "Interface for user-AI chat about the report.")
    Component(uiComponents, "Reusable UI Library (ShadCN)", "ShadCN, Radix, Tailwind", "Core visual building blocks (Buttons, Cards, etc.).")
}

package "State & Logic (Hooks & Contexts)" <<Rectangle>> {
    Component(stateMgmt, "State & UI Logic", "React Context, Custom Hooks", "Manages global auth state (AuthProvider), analysis data (useAnalysisManager), file upload (useFileUploadManager), notifications (useToast).")
    Component(routing, "Routing (Next.js App Router)", "Next.js", "Maps URLs to pages, handles navigation.")
}

package "Firebase Integration (Client-Side)" <<Rectangle>> {
    Component(firebaseClient, "Firebase Client Config", "Firebase SDK", "Initializes Firebase SDK, provides service instances (Auth, Firestore, Storage, RTDB), handles emulator connections.")
}

' Relationships within Frontend
authUI -> stateMgmt : "Uses useAuth hook"
fileUploadUI -> stateMgmt : "Uses useFileUploadManager hook"
analysisListUI -> stateMgmt : "Uses useAnalysisManager hook"
analysisViewUI -> stateMgmt : "Uses useAnalysisManager hook"
reportViewUI -> reportChatUI : "Integrates"
reportChatUI -> stateMgmt : "Uses useToast, local state"
stateMgmt -> firebaseClient : "Uses Firebase services (Auth, RTDB)"

' All UI components use uiComponents (implicit, not drawing all lines for clarity)
authUI ..> uiComponents
fileUploadUI ..> uiComponents
analysisListUI ..> uiComponents
analysisViewUI ..> uiComponents
reportViewUI ..> uiComponents
reportChatUI ..> uiComponents


' External Interactions (Simplified - details in Container diagram)
stateMgmt ..> "Next.js Server Actions" : "Calls for backend operations (via hooks)"
firebaseClient ..> "Firebase Services (Auth, RTDB)" : "Connects to (Emulators/Prod)"

@enduml
