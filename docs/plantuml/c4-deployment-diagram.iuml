@startuml C4 Deployment Diagram - Energy Compliance Analyzer
' Remote includes with full URLs
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Firebase/Firebase.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Compute/CloudFunctions.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Mobile/AppHosting.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/AI_and_Machine_Learning/VertexAI.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Networking/CloudDNS.puml ' For conceptual representation of Firebase Hosting's domain serving

!include <C4/C4_Deployment>

title Deployment Diagram: Energy Compliance Analyzer on Firebase/GCP

Deployment_Node_L(user_device, "User's Device (Browser)", "Web Browser") {
    Container(browser, "Web Browser", "Chrome, Firefox, Safari, Edge", "Renders the frontend application.")
}

Deployment_Node_L(firebase_platform, "Firebase Platform (GCP Region: us-central1)", "Google Cloud Platform") {
    Deployment_Node_L(app_hosting, "Firebase App Hosting", "Managed Next.js Hosting", $sprite="gcp/Mobile/AppHosting") {
        Container(frontend_app, "Frontend Web App", "Next.js, React", "User Interface, Client-side Logic.")
        Container(server_actions, "Backend API", "Next.js Server Actions", "Server-side request handling, Genkit (for chat AI).")
    }

    Deployment_Node_L(cloud_functions_env, "Firebase Functions Environment", "Node.js Runtime", $sprite="gcp/Compute/CloudFunctions") {
        Container(functions_runtime, "Background Processing Functions", "Node.js, Genkit, Gemini", "AI pipeline, data processing (triggered by Firestore).")
    }

    Deployment_Node_L(firestore_service, "Firebase Firestore", "NoSQL Document Database Service", $sprite="gcp/Firebase/Firestore") {
        ContainerDb(firestore_db, "Main Database", "Firestore Collections/Documents", "Stores analysis metadata, user data, structured reports.")
    }

    Deployment_Node_L(storage_service, "Firebase Storage", "Object Storage Service", $sprite="gcp/Firebase/CloudStorage") {
        ContainerDb(storage_bucket, "Storage Bucket", "GCS Bucket", "Stores uploaded CSVs, generated MDX reports.")
    }

    Deployment_Node_L(rtdb_service, "Firebase Realtime Database", "NoSQL Realtime Database Service", $sprite="gcp/Firebase/RealtimeDatabase") {
        ContainerDb(rtdb_instance, "Chat Database", "RTDB JSON Tree", "Stores chat messages.")
    }

    Deployment_Node_L(auth_service, "Firebase Authentication Service", "Identity Platform", $sprite="gcp/Firebase/Authentication") {
        Container(auth_system, "Authentication System", "Firebase Auth Backend", "Manages user identities, Google Sign-In.")
    }
}

Deployment_Node_L(google_cloud_services, "Google Cloud AI Services", "Google Cloud Platform") {
    Deployment_Node_L(gemini_api_service, "Google AI (Gemini API)", "Generative AI Model Service", $sprite="gcp/AI_and_Machine_Learning/VertexAI") {
         Container(gemini_model, "Gemini Models", "LLM", "Provides natural language processing and generation capabilities.")
    }
}


' Relationships
user_device -> app_hosting : "Accesses Frontend App via HTTPS"
app_hosting -> auth_service : "Authenticates User"
app_hosting -> firestore_service : "Reads/Writes Data (Server Actions)"
app_hosting -> storage_service : "Reads/Writes Files (Server Actions)"
app_hosting -> rtdb_service : "Manages Chat (Client/Server Actions)"
app_hosting -> gemini_api_service : "Calls for Chat AI (Server Actions via Genkit)"

cloud_functions_env -> firestore_service : "Triggered by, Reads/Writes Data"
cloud_functions_env -> storage_service : "Reads/Writes Files"
cloud_functions_env -> gemini_api_service : "Calls for Analysis AI (via Genkit)"

@enduml
