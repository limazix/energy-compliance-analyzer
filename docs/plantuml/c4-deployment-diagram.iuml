@startuml C4 - Deployment Diagram - Energy Compliance Analyzer
!define GCP_SPRITES_LOCATION https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml
' Specific icon sets (include as needed, after GCPC4Integration)
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/User_Management/FirebaseAuthentication.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Databases/Firestore.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Databases/FirebaseRealtimeDatabase.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Storage/CloudStorage.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Compute/CloudFunctions.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/AI_Machine_Learning/VertexAI.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/User_Management/Firebase.puml ' General Firebase for App Hosting

!include <C4/C4_Deployment.puml>

LAYOUT_WITH_LEGEND()

title Deployment Diagram for Energy Compliance Analyzer (Production on Firebase/GCP)

Person_Ext(user, "User", "Engineer/Analyst")

Node_L(user_device, "User Device", "Web Browser (Desktop/Mobile)") {
    Container(frontend_browser, "Frontend Web App", "Next.js (SPA), React", "Runs in user's browser")
}

Deployment_Node_L(gcp_region, "Google Cloud Platform (e.g., us-central1)", $sprite=$gcp) {
    Deployment_Node(app_hosting, "Firebase App Hosting", "Serverless Next.js Hosting", $sprite=$firebase_icon) {
        Container(frontend_server, "Frontend Web App (Server-side)", "Next.js", "Serves static assets, SSR/RSC components")
        Container(server_actions_env, "Backend API (Server Actions)", "Next.js Runtime", "Executes server-side logic for API calls")
    }

    Deployment_Node(cloud_functions_env, "Firebase Functions", "Serverless Compute Environment (Node.js)", $sprite=$cloud_functions) {
        Container(functions_backend, "Background Processing", "Node.js, Genkit", "AI pipeline, CSV processing, report generation")
    }
    
    Deployment_Node(firestore_service, "Firebase Firestore", "NoSQL Document Database Service", $sprite=$firestore) {
        ContainerDb(firestore_db, "Main Database", "Firestore instance", "Stores analysis metadata, structured reports, user data")
    }

    Deployment_Node(storage_service, "Firebase Storage", "Object Storage Service (via GCS)", $sprite=$cloud_storage) {
        ContainerDb(storage_bucket, "File Storage", "Storage bucket", "Stores uploaded CSVs, generated MDX reports")
    }

    Deployment_Node(rtdb_service, "Firebase Realtime Database", "NoSQL Realtime Database Service", $sprite=$firebase_realtime_database) {
        ContainerDb(rtdb, "Chat Database", "RTDB instance", "Stores chat history")
    }

    Deployment_Node(firebase_auth_service, "Firebase Authentication", "Identity Management Service", $sprite=$firebase_auth) {
        Container(auth_container, "Authentication Service", "Handles user sign-in with Google")
    }

    Deployment_Node(vertex_ai_service, "Google Vertex AI", "AI Platform Service", $sprite=$vertex_ai) {
        Container(gemini_model, "Gemini LLM", "Generative AI Model", "Powers analysis and chat")
    }
}

System_Ext(aneel, "ANEEL", "Brazilian National Electrical Energy Agency", "External source of regulations")

' Relationships
Rel(user, frontend_browser, "Accesses via HTTPS")

Rel(frontend_browser, frontend_server, "Requests pages & data via HTTPS")
Rel(frontend_browser, server_actions_env, "Invokes Server Actions via HTTPS")
Rel(frontend_browser, auth_container, "Authenticates (OAuth flow) via HTTPS")
Rel(frontend_browser, rtdb, "Syncs chat messages via WebSocket/HTTPS")
Rel(frontend_browser, storage_bucket, "Uploads files directly (or via Server Actions presigned URLs) via HTTPS")


Rel(frontend_server, server_actions_env, "Delegates to for API logic") ' Server Actions are part of the Next.js app on App Hosting

Rel(server_actions_env, firestore_db, "Reads/Writes data via Firebase SDK")
Rel(server_actions_env, storage_bucket, "Reads/Writes file metadata via Firebase SDK")
Rel(server_actions_env, rtdb, "Writes chat messages via Firebase SDK")
Rel(server_actions_env, gemini_model, "Makes API calls (Genkit) via HTTPS")
Rel(server_actions_env, functions_backend, "Triggers indirectly via Firestore updates")

Rel(functions_backend, firestore_db, "Reads/Writes data via Firebase SDK")
Rel(functions_backend, storage_bucket, "Reads/Writes files via Firebase SDK")
Rel(functions_backend, gemini_model, "Makes API calls (Genkit) via HTTPS")

Rel(analyzer_system, aneel, "References regulations from")

@enduml
