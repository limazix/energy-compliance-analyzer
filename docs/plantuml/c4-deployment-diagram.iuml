@startuml
!define GCPPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include GCPPuml/GCPC4Integration.puml
!include GCPPuml/IconPack.puml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml

title Deployment Diagram for Energy Compliance Analyzer (Production on GCP/Firebase)

GCPCloud(gcp_region, "Google Cloud Region (e.g., us-central1)", "Physical Datacenter Location"){
    Node(app_hosting_env, "Firebase App Hosting Environment", "Managed Serverless Environment for Next.js") {
        Container(frontend_app, "Frontend Web App", "Next.js/React", "Serves UI to users. Hosted as a static + SSR build.")
        Container(server_actions_api, "Backend API", "Next.js Server Actions", "Runs as part of the Next.js backend on App Hosting.")
    }

    Node(cloud_functions_env, "Firebase Functions Environment", "Managed Serverless FaaS") {
        Container(processing_functions, "Background Processing Functions", "Node.js, TypeScript, Genkit", "Triggered by Firestore events (e.g., processAnalysisOnUpdate).")
    }

    Deployment_Node(firebase_platform, "Firebase Backend Services", "Managed BaaS") {
        GCPFirebaseFirestore(firestore_db, "Firebase Firestore", "NoSQL Document DB", "Stores analysis metadata, structured reports.")
        GCPFirebaseStorage(storage_bucket, "Firebase Storage", "Object Storage", "Stores uploaded CSVs, generated MDX/PDFs.")
        GCPFirebaseRTDB(rtdb_instance, "Firebase Realtime Database", "NoSQL JSON DB", "Stores chat messages.")
        GCPFirebaseAuth(auth_service, "Firebase Authentication", "Identity Management", "Manages user sign-in (Google).")
    }
}

System_Ext(user_device, "User Device", "Web Browser (Desktop/Mobile)")
System_Ext(google_ai_platform, "Google AI Platform", "Hosts Gemini Models")

Rel(user_device, frontend_app, "Accesses via HTTPS", "HTTPS")

Rel(frontend_app, server_actions_api, "Invokes within same environment")
Rel(frontend_app, auth_service, "Uses for Authentication", "Firebase SDK")
Rel(frontend_app, rtdb_instance, "Reads/Writes Chat via WebSockets", "Firebase SDK")


Rel(server_actions_api, firestore_db, "Reads/Writes Data", "Firebase Admin SDK / Server SDK")
Rel(server_actions_api, storage_bucket, "Reads/Writes Files", "Firebase Admin SDK / Server SDK")
Rel(server_actions_api, rtdb_instance, "Reads/Writes Chat Data", "Firebase Admin SDK / Server SDK")
Rel(server_actions_api, google_ai_platform, "Makes API Calls (Genkit)", "HTTPS/gRPC")

Rel(processing_functions, firestore_db, "Triggered by, Reads/Writes Data", "Firebase Admin SDK")
Rel(processing_functions, storage_bucket, "Reads/Writes Files", "Firebase Admin SDK")
Rel(processing_functions, google_ai_platform, "Makes API Calls (Genkit)", "HTTPS/gRPC")

@enduml