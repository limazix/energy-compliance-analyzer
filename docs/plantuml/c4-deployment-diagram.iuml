
@startuml C4 Deployment Diagram - Energy Compliance Analyzer
!define GCP_SPRITES_LOCATION https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml

' Include specific icon sets
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Firebase/FirebasePlatform.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Identity/FirebaseAuthentication.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Databases/Firestore.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Databases/FirebaseRealtimeDatabase.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Storage/CloudStorage.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Compute/CloudFunctions.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/AI_Machine_Learning/VertexAI.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Networking/CloudDNS.puml ' Assuming DNS is used
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Networking/CloudLoadBalancing.puml ' App Hosting uses Load Balancing

skinparam {
    HyperlinkColor #3F51B5
    FontName Inter, SansSerif
    shadowing false
    RoundCorner 20
    BackgroundColor #F0F2F5
    ArrowColor #555555
    ArrowThickness 1.5
    Node { BackgroundColor #E8EAF6; BorderColor #3F51B5; }
    DeploymentNode { BackgroundColor #D1C4E9; BorderColor #5E35B1; }
    Container { BackgroundColor #C5CAE9; BorderColor #303F9F; }
}
LAYOUT_WITH_LEGEND()

title Deployment View for Energy Compliance Analyzer (Production on Firebase/GCP)

Person_Ext(User, "User", "Accesses via Web Browser")

DeploymentNode("Internet", "Public Internet", "Global Network") {
    DeploymentNode("Google Cloud Platform (GCP)", "Firebase & GCP Services in a Region (e.g., us-central1)", "Cloud Infrastructure", $sprite="gcp/Products_and_Services/GoogleCloud") {
        
        DeploymentNode("Firebase App Hosting", "Managed Hosting Service", "Hosts Next.js App", $sprite="gcp/Firebase/FirebasePlatform") {
            Container(WebAppInstance, "Next.js Application Instance", "Next.js, React, Server Actions", "Serves Frontend UI, Handles API Requests via Server Actions. Scales automatically.", $sprite="gcp/Firebase/FirebasePlatform")
            DeploymentNode("Global Load Balancer", "Google Cloud Load Balancing", "Distributes traffic to App Hosting instances.", $sprite="gcp/Networking/CloudLoadBalancing")
        }

        DeploymentNode("Firebase Functions", "Serverless Execution Environment", "Executes backend logic", $sprite=$cloud_functions) {
            Container(ProcessAnalysisFn, "processAnalysisOnUpdate Function", "Node.js, Genkit, Gemini", "Processes data, performs AI analysis, generates reports. Triggered by Firestore.", $sprite=$cloud_functions)
        }
        
        DeploymentNode("Firebase Authentication Service", "Managed Identity Platform", "Handles User Sign-In", $sprite=$firebase_auth) {
            ' No specific container needed here, it's a managed service endpoint
        }
        
        DeploymentNode("Firebase Firestore Service", "Scalable NoSQL Database", "Stores application data", $sprite=$firestore) {
            ' No specific container needed here, it's a managed service endpoint
        }
        
        DeploymentNode("Firebase Storage Service", "Scalable Object Storage", "Stores user files and reports", $sprite=$cloud_storage) {
             ' No specific container needed here, it's a managed service endpoint
        }

        DeploymentNode("Firebase Realtime Database Service", "Real-time JSON Database", "Stores chat messages", $sprite=$firebase_realtime_database) {
             ' No specific container needed here, it's a managed service endpoint
        }
        
        DeploymentNode("Google AI Platform / Vertex AI", "AI/ML Services", "Provides Gemini Models", $sprite=$vertex_ai) {
            ' External API endpoint consumed by Server Actions and Functions
        }
        
        DeploymentNode("Cloud DNS", "Managed DNS Service", "Resolves application domain name (if custom domain is used)", $sprite="gcp/Networking/CloudDNS")
    }
}

User --> GlobalLoadBalancer : HTTPS
GlobalLoadBalancer --> WebAppInstance : Routes traffic
WebAppInstance -> FirebaseAuthenticationService : Authenticates User (via Firebase SDK)
WebAppInstance -> FirestoreService : Reads/Writes analysis data (via Server Actions)
WebAppInstance -> StorageService : (Indirectly for uploads/downloads via Server Actions or client SDK)
WebAppInstance -> RealtimeDatabaseService : Manages chat data (via Server Actions & client SDK)
WebAppInstance -> GoogleAIPlatform : (Report Chat AI, via Server Actions)
WebAppInstance -> ProcessAnalysisFn : (Triggers via Firestore update)

ProcessAnalysisFn -> FirestoreService : Updates status, reads/writes data
ProcessAnalysisFn -> StorageService : Reads CSVs, writes MDX
ProcessAnalysisFn -> GoogleAIPlatform : (Data Analysis & Report Generation)

CloudDNS -> GlobalLoadBalancer : (Resolves domain to LB IP)

@enduml

    