@startuml
!define GCPPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include GCPPuml/GCPC4Integration.puml

' You MUST include specific service PUML files to use their sprites in DeploymentNodeGCP
' For example:
!include GCPPuml/Firebase/Firebase.puml
!include GCPPuml/Compute/CloudFunctions.puml
!include GCPPuml/Database/CloudFirestore.puml
!include GCPPuml/Storage/CloudStorage.puml
!include GCPPuml/Networking/CloudLoadBalancing.puml ' Example if App Hosting uses it
!include GCPPuml/AI/VertexAI.puml ' Representing Gemini backend

title Deployment Diagram - Energy Compliance Analyzer (Production)

DeploymentNodeGCP(gcp_region, "Google Cloud Region (e.g., us-central1)", "GCP Zone/Region", $sprite="gcp/GCPInfra/GCP") {

    DeploymentNodeGCP(app_hosting_env, "Firebase App Hosting", "Serverless Next.js Hosting", $sprite="gcp/Firebase/FirebaseHosting") {
        Container(frontend_app, "Frontend Web App", "Next.js/React", "User Interface, Client Logic")
        Container(server_actions, "Backend API", "Next.js Server Actions", "API Logic, Orchestration")
    }

    DeploymentNodeGCP(cloud_functions_env, "Firebase Functions", "Serverless Compute Environment", $sprite="gcp/Compute/CloudFunctions") {
        Container(bg_processing, "Background Processing", "Node.js, Genkit", "AI Analysis Pipeline")
    }

    DeploymentNodeGCP(firestore_service, "Firebase Firestore", "NoSQL Document Database", $sprite="gcp/Database/CloudFirestore") {
        ContainerDb(main_db, "Main Database", "Firestore", "Analysis Data, Metadata, Status")
    }

    DeploymentNodeGCP(rtdb_service, "Firebase Realtime DB", "NoSQL Realtime Database", $sprite="gcp/Database/RealtimeDatabase") {
        ContainerDb(chat_db, "Chat Database", "RTDB", "Report Chat History")
    }

    DeploymentNodeGCP(storage_service, "Firebase Storage", "Object Storage (GCS Buckets)", $sprite="gcp/Storage/CloudStorage") {
        ContainerDb(file_storage, "File Storage", "GCS", "Uploaded CSVs, Generated MDX Reports")
    }

    DeploymentNodeGCP(auth_service_node, "Firebase Authentication", "Identity Platform", $sprite="gcp/Firebase/FirebaseAuthentication") {
         Container(auth_service, "Authentication Service", "Firebase Auth", "User Identity Management")
    }
    
    DeploymentNodeGCP(google_ai_infra, "Google AI Platform", "AI/ML Services", $sprite="gcp/AI/VertexAI") {
        System_Ext(google_ai_service, "Google AI (Gemini)", "LLM Services", "Provides generative AI capabilities")
    }
}

Person_Ext(user, "User", "Interacts via Web Browser/Mobile")

Rel(user, frontend_app, "Accesses via HTTPS", "HTTPS")
Rel(frontend_app, server_actions, "Invokes")
Rel(server_actions, main_db, "Reads/Writes Data", "Firebase SDK")
Rel(server_actions, chat_db, "Reads/Writes Data", "Firebase SDK")
Rel(server_actions, file_storage, "Accesses Files", "Firebase SDK")
Rel(server_actions, auth_service, "Verifies Tokens", "Firebase SDK")
Rel(server_actions, google_ai_service, "Calls for AI Chat", "HTTPS/gRPC")

Rel(main_db, bg_processing, "Triggers Function", "Event")
Rel(bg_processing, file_storage, "Reads/Writes Files", "Firebase Admin SDK")
Rel(bg_processing, main_db, "Updates Data", "Firebase Admin SDK")
Rel(bg_processing, google_ai_service, "Calls for AI Processing", "HTTPS/gRPC")

Rel(frontend_app, auth_service_node, "Uses for Login", "Firebase SDK")


SHOW_LEGEND()
@enduml
