@startuml C4 - Deployment Diagram - Energy Compliance Analyzer
!define GCP_SPRITES_LOCATION https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml

' Include specific GCP service icons needed for this diagram
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Mobile/Firebase.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Identity_Security/FirebaseAuthentication.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Databases/Firestore.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Databases/FirebaseRealtimeDatabase.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Storage/CloudStorage.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Compute/CloudFunctions.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/AI_Machine_Learning/VertexAI.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!include DEVICONS/react.puml

LAYOUT_TOP_DOWN()
LAYOUT_WITH_LEGEND()

Person(user, "User", "Accesses via Web Browser / Mobile Browser")

Deployment_Node_L(gcpRegion, "Google Cloud Platform (Region: e.g., us-central1)", "GCP Region") {
    Deployment_Node(firebasePlatform, "Firebase Platform", "Managed Services", $sprite=$firebase) {
        Deployment_Node(appHosting, "Firebase App Hosting", "Hosts Next.js application", $sprite=$firebase) {
            Container(frontendApp, "Frontend Web App", "Next.js/React", "Serves UI, handles client-side logic", $sprite=$react_100)
            Container(serverActions, "Backend API", "Next.js Server Actions", "Server-side logic for Next.js app", $sprite=$firebase)
        }
        ContainerDb(firestoreDb, "Firebase Firestore", "NoSQL Document DB", "Stores analysis metadata, structured reports", $sprite=$firestore)
        ContainerDb(rtdb, "Firebase Realtime DB", "NoSQL Realtime DB", "Stores chat messages", $sprite=$firebase_realtime_database)
        Container(storage, "Firebase Storage", "Object Storage", "Stores CSVs, MDX reports", $sprite=$cloud_storage)
        Container(functions, "Firebase Functions", "Serverless Compute", "Runs AI processing pipeline", $sprite=$cloud_functions)
        Container(authService, "Firebase Authentication", "Identity Platform", "Manages user authentication", $sprite=$firebase_auth)
    }
    Deployment_Node(googleAIPlatform, "Google AI Platform", "AI/ML Services", $sprite=$vertex_ai) {
         Container(geminiModels, "Gemini Models", "LLM Service", "Used by Genkit flows in Server Actions and Functions", $sprite=$vertex_ai)
    }
}

Rel(user, frontendApp, "Accesses application", "HTTPS")

Rel(frontendApp, serverActions, "Invokes server logic", "Internal to App Hosting")
Rel(serverActions, firestoreDb, "Reads/Writes data", "Firebase SDK")
Rel(serverActions, rtdb, "Reads/Writes chat data", "Firebase SDK")
Rel(serverActions, storage, "Accesses file URLs", "Firebase SDK")
Rel(serverActions, authService, "Validates tokens", "Firebase SDK")
Rel(serverActions, geminiModels, "Calls for chat AI", "HTTPS/Genkit")

Rel(frontendApp, authService, "Initiates login, gets tokens", "Firebase SDK")
Rel(frontendApp, storage, "Uploads files directly", "Firebase SDK")

Rel(functions, firestoreDb, "Triggered by, Reads/Writes data", "Firebase SDK")
Rel(functions, storage, "Reads/Writes files", "Firebase SDK")
Rel(functions, geminiModels, "Calls for analysis pipeline", "HTTPS/Genkit")

@enduml
