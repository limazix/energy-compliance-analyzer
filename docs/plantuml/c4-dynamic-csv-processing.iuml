@startuml
!define GCPPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include GCPPuml/GCPGeneral.puml
' For specific service icons, include their .puml files, e.g.:
' !include GCPPuml/Firebase/Firebase.puml
' !include GCPPuml/Compute/CloudFunctions.puml
' !include GCPPuml/Database/CloudFirestore.puml
' !include GCPPuml/Storage/CloudStorage.puml

title Dynamic Diagram: CSV Analysis Processing

actor User
participant "Frontend Web App (Next.js)" as Frontend
participant "Server Actions API" as ServerActions
database "Firebase Firestore" as Firestore
database "Firebase Storage" as Storage
participant "Firebase Functions (AI Pipeline)" as Functions
participant "Google AI (Gemini)" as Gemini

User -> Frontend : 1. Selects CSV, provides metadata
Frontend -> ServerActions : 2. Calls createInitialAnalysisRecordAction
ServerActions -> Firestore : 3. Creates initial record (status: uploading)
Frontend -> Storage : 4. Uploads CSV file directly (via SDK)
Frontend -> ServerActions : 5. Calls finalizeFileUploadRecordAction (with Storage URL)
ServerActions -> Firestore : 6. Updates record (status: summarizing_data, file URL)

Firestore -> Functions : 7. Triggers processAnalysisOnUpdate Function
Functions -> Storage : 8. Reads CSV file
Functions -> Gemini : 9. Executes AI Agent Pipeline (Summarizer, Identifier, Reporter, Reviewer)
note right of Functions : Updates Firestore with progress during pipeline

Functions -> Firestore : 10. Saves final structured JSON report
Functions -> Storage : 11. Converts to MDX, saves MDX to Storage
Functions -> Firestore : 12. Updates status to "completed", stores MDX path

Firestore -> Frontend : 13. Real-time updates (onSnapshot) reflect progress & completion
User <- Frontend : 14. Views analysis results/report

@enduml
