@startuml
!define GCPPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include GCPPuml/GCPC4Integration.puml
!include GCPPuml/IconPack.puml

title Dynamic Diagram: CSV Analysis Processing

actor User
participant "Frontend Web App" as Frontend
participant "Server Actions" as ServerActions
participant "Firebase Firestore" as Firestore
participant "Firebase Storage" as Storage
participant "Firebase Functions\n(processAnalysisOnUpdate)" as Functions
participant "Google AI (Gemini)" as Gemini

User -> Frontend: 1. Selects CSV, provides metadata
Frontend -> ServerActions: 2. Calls createInitialAnalysisRecordAction
ServerActions -> Firestore: 3. Creates analysis record (status: "uploading")
ServerActions --> Frontend: Returns analysisId
Frontend -> Storage: 4. Uploads CSV file (managed by useFileUploadManager)
Frontend -> ServerActions: 5. Calls finalizeFileUploadRecordAction (updates Firestore status to "summarizing_data", adds Storage URL)

Firestore -> Functions: 6. Triggers processAnalysisOnUpdate (on status change)
Functions -> Storage: 7. Reads CSV file content
Functions -> Gemini: 8. Orchestrates AI Agent Pipeline (Summarizer, Regulation ID, Initial Reporter, Reviewer)
loop For each agent in pipeline
    Functions -> Gemini: Calls AI agent
    Gemini --> Functions: Returns agent output
end
Functions -> Firestore: 9. Saves final structured report (JSON)
Functions -> Storage: 10. Converts JSON to MDX, saves MDX report
Functions -> Firestore: 11. Updates analysis (status: "completed", MDX path)
Firestore --> Frontend: 12. (via onSnapshot) Updates UI with progress/results

@enduml