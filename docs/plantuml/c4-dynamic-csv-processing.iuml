@startuml Dynamic_CSV_Processing
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include <GCP/GCPCommon>
!include <GCP/Compute/CloudRun>
!include <GCP/Databases/CloudFirestore>
!include <GCP/Storage/CloudStorage>
!include <GCP/Compute/CloudFunctions>
!include <GCP/AI/VertexAI>

title "CSV Analysis Processing (Upload to Report)"

actor User as user
participant "Frontend Web App" as frontendApp <<Container, $sprite="gcp_cloud_run">>
participant "Backend API (SA)" as serverActions <<Container, $sprite="gcp_cloud_run">>
database "Firebase Firestore" as firestore <<ContainerDb, $sprite="gcp_cloud_firestore">>
participant "Firebase Storage" as storage <<Container, $sprite="gcp_cloud_storage">>
participant "Background Processing (Functions)" as firebaseFunctions <<Container, $sprite="gcp_cloud_functions">>
participant "Google AI (Gemini)" as googleAI <<System_Ext, $sprite="gcp_vertex_ai">>

autonumber "<b>[0]"

user -> frontendApp: Uploads CSV & metadata
frontendApp -> serverActions: Calls create/finalize SA; Manages Storage upload
serverActions -> firestore: Creates record (status 'uploading'); Updates (status 'summarizing_data', URL)
frontendApp -> storage: Uploads CSV to Storage (client-side)

firestore -> firebaseFunctions: Triggers 'processAnalysisOnUpdate'
firebaseFunctions -> storage: Reads CSV from Storage
firebaseFunctions -> googleAI: Executes AI Agent pipeline (Summarizer, Identifier, Analyzer, Reviewer)
firebaseFunctions -> firestore: Saves structured report (JSON)
firebaseFunctions -> storage: Converts to MDX, saves to Storage
firebaseFunctions -> firestore: Updates status to 'completed' & MDX path
frontendApp <-- firestore: Listens for status updates (onSnapshot) & displays result

@enduml