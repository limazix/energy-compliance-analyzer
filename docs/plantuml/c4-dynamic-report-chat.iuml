@startuml c4-dynamic-report-chat
!define GCPPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include GCPPuml/GCPCommon.puml
' Optionally include specific services for sprites, e.g.:
' !include GCPPuml/Firebase/Firebase.puml
' !include GCPPuml/AIML/GenerativeAI.puml

title Dynamic Diagram: Report Chat Interaction

actor User
participant "Frontend Web App" as Frontend
participant "Server Actions" as ServerActions
participant "Firebase RTDB" as RTDB <<gcp/Firebase/RealtimeDatabase>>
participant "Orchestrator Flow (Genkit)" as OrchestratorFlow
participant "Google AI (Gemini)" as Gemini <<gcp/AIML/GenerativeAI>>
participant "Revisor Tool (Genkit)" as RevisorTool
participant "Review Flow (Genkit)" as ReviewFlow
participant "Firebase Firestore" as Firestore <<gcp/Firebase/Firestore>>
participant "Firebase Storage" as Storage <<gcp/Firebase/CloudStorageForFirebase>>

autonumber

User -> Frontend: Sends chat message
Frontend -> ServerActions: askReportOrchestratorAction()
ServerActions -> RTDB: Save user message, AI placeholder
ServerActions -> OrchestratorFlow: Invoke with user message & report context
OrchestratorFlow -> Gemini: Process query
alt User requests report modification
  OrchestratorFlow -> RevisorTool: callRevisorTool(structuredReport)
  RevisorTool -> ReviewFlow: Invoke reviewComplianceReportFlow()
  ReviewFlow -> Gemini: Refine structured report
  Gemini --> ReviewFlow: Revised structured report
  ReviewFlow --> RevisorTool: Return revised report
  RevisorTool --> OrchestratorFlow: Return revised report
end
Gemini --> OrchestratorFlow: AI textual response
OrchestratorFlow --> ServerActions: Return AI response (and revised report if any)
ServerActions -> RTDB: Stream/Update AI response
opt Report was modified
  ServerActions -> Firestore: Update structured report
  ServerActions -> Storage: Save new MDX report
end
RTDB --> Frontend: (onValue) Receives chat updates
opt Report was modified in Firestore
  Firestore --> Frontend: (onSnapshot) Receives report document updates
  Frontend -> Frontend: Re-render MDX
end

@enduml
