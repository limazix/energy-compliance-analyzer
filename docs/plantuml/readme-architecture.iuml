@startuml High-Level Architecture - Energy Compliance Analyzer
' Remote includes with full URLs
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml
' Include specific service icon sets as needed, e.g.:
' !include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Firebase/Firebase.puml
' !include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Compute/CloudFunctions.puml
' !include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/AI_and_Machine_Learning/VertexAI.puml ' (for Gemini/Genkit representation)

' C4-PlantUML Includes (already part of GCPC4Integration or standard C4 if not using GCP specific elements)
!include <C4/C4_Container>
!include <C4/C4_Component>
!include <C4/C4_Deployment>

' Styling
skinparam {
    BackgroundColor #F0F2F5
    RoundCorner 20
    Shadowing false
    ArrowColor #555555
    ArrowThickness 1.5
    FontName Inter, Arial, sans-serif
    DefaultTextAlignment center

    rectangle {
        StereotypeFontSize 12
        FontColor #FFFFFF
        FontSize 14
        FontStyle bold
    }
    database {
        StereotypeFontSize 12
        FontColor #FFFFFF
        FontSize 14
        FontStyle bold
    }
    queue {
        StereotypeFontSize 12
        FontColor #FFFFFF
        FontSize 14
        FontStyle bold
    }
    person {
        BackgroundColor #0078D4
        BorderColor #005A9E
        FontColor #FFFFFF
        StereotypeFontColor #FFFFFF
    }
    system {
        BackgroundColor #3F51B5  ' Primary Blue
        BorderColor #2C387E
        StereotypeFontColor #E0E0E0
    }
    container {
        BackgroundColor #607D8B  ' Neutral Dark Blue-Gray
        BorderColor #37474F
        StereotypeFontColor #E0E0E0
    }
    component {
        BackgroundColor #FF9800  ' Accent Orange
        BorderColor #E65100
        FontColor #212121
        StereotypeFontColor #212121
    }
}

' High-Level Architecture
Person(user, "Energy Sector User", "Uploads CSV data, interacts with reports.")
System_Boundary(appBoundary, "Energy Compliance Analyzer") {
    Container(frontend, "Frontend Web App (Next.js)", "Next.js, React, ShadCN, Tailwind", "User Interface for data upload, report viewing, and chat interaction. Hosted on Firebase App Hosting.")
    Container(serverActions, "Backend API (Next.js Server Actions)", "Next.js Server Actions, Genkit", "Handles client requests, orchestrates chat AI, manages Firestore/Storage interactions.")
    ContainerDb(firestore, "Main Database (Firestore)", "Firebase Firestore", "Stores analysis metadata, status, structured reports, user data.")
    ContainerDb(storage, "File Storage (Firebase Storage)", "Firebase Storage", "Stores uploaded CSV files and generated MDX reports.")
    ContainerDb(rtdb, "Chat Database (RTDB)", "Firebase Realtime Database", "Stores real-time chat history for reports.")
    SystemQueue(functions, "Background Processing (Firebase Functions)", "Node.js, Genkit, Gemini", "Processes CSV data, runs AI pipeline for analysis and report generation.")
}

System_Ext(googleAI, "Google AI (Gemini)", "Generative AI Models for analysis and chat. Accessed via Genkit.")
System_Ext(firebaseAuth, "Firebase Authentication", "Handles user authentication (Google Sign-In).")

' Relationships
user -> frontend : "Uses"
frontend -> serverActions : "Makes API calls (Server Actions)"
serverActions -> firestore : "Reads/Writes Data"
serverActions -> storage : "Reads/Writes Files (MDX)"
serverActions -> rtdb : "Manages Chat History"
serverActions -> googleAI : "Invokes Chat Orchestrator (Genkit)"
serverActions -> functions : "Triggers via Firestore update (indirectly)"

functions -> storage : "Reads CSV, Writes MDX"
functions -> firestore : "Reads data, Writes analysis results & status"
functions -> googleAI : "Invokes AI Agents (Genkit)"

frontend -> firebaseAuth : "Authenticates User"

' Layout hints
left to right direction
Rel_D(user, frontend, "Interacts with")
Rel_D(frontend, serverActions, "Communicates via")
Rel_Group_D(group_backend, {
  serverActions
  Rel_D(serverActions, firestore, "Uses")
  Rel_D(serverActions, storage, "Uses")
  Rel_D(serverActions, rtdb, "Uses")
  Rel_D(serverActions, functions, "Triggers")
})
Rel_D(functions, googleAI, "Uses")
Rel_D(serverActions, googleAI, "Uses")

Rel_D(frontend, firebaseAuth, "Authenticates via")


title High-Level Architecture: Energy Compliance Analyzer
caption Generated by PlantUML for Energy Compliance Analyzer

@enduml
