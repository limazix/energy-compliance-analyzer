@startuml readme_architecture

' Define base URL for GCP icons (though not explicitly used with sprites in this high-level diagram)
!define GCPPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include GCPPuml/GCPC4Integration.puml ' For C4 macros that can integrate GCP icons

' Include standard C4-PlantUML package for base C4 elements and styling
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Custom skinparams to achieve a style similar to the example and PRD guidelines
skinparam {
    DefaultFontName Inter, Arial, sans-serif ' Use Inter as primary, fallback to Arial
    DefaultFontSize 12
    Shadowing false ' For a cleaner, flatter look
    RoundCorner 20 ' More rounded corners for elements

    ArrowColor #4A5568 ' Dark Gray for arrows
    ArrowThickness 1.5
    LineColor #718096 ' Medium Gray for lines

    BackgroundColor #F0F2F5 ' Light Gray page background (PRD)

    ' C4 Person (User)
    PersonBackgroundColor #FFFFFF ' White background for Person
    PersonBorderColor #3F51B5 ' Deep Blue border (PRD Primary)
    PersonFontColor #2D3748 ' Darker Gray text
    PersonStereotypeFontColor #4A5568

    ' C4 System Boundary (Main Application System)
    BoundaryBorderColor #3F51B5 ' Deep Blue border
    BoundaryBackgroundColor #FFFFFF ' White background for the boundary box itself
    BoundaryFontColor #3F51B5 ' Deep Blue text for boundary title
    BoundaryStereotypeFontColor #3F51B5
    BoundaryFontStyle bold

    ' C4 Container (Frontend, Backend API, Functions - general application parts)
    ContainerBorderColor #3F51B5 ' Deep Blue border
    ContainerBackgroundColor #EBF8FF ' Very Light Blue background (subtle, professional)
    ContainerFontColor #2D3748 ' Darker Gray text
    ContainerStereotypeFontColor #4A5568 ' Medium Gray for stereotype (e.g., "Next.js, React")

    ' C4 Database Container (Firestore, RTDB, Storage)
    ContainerDbBorderColor #3F51B5    ' Deep Blue border, consistent
    ContainerDbBackgroundColor #E6FFFA ' Very Light Teal/Mint background (distinct & professional for data stores)
    ContainerDbFontColor #2D3748     ' Darker Gray text
    ContainerDbStereotypeFontColor #4A5568 ' Medium Gray for stereotype (e.g., "Firebase Firestore")

    ' C4 External System (Firebase Auth, Gemini)
    ExtSystemBorderColor #A0AEC0 ' Medium Gray border for external systems
    ExtSystemBackgroundColor #F7FAFC ' Off-White/Very Light Gray for externals
    ExtSystemFontColor #4A5568   ' Medium Gray text
    ExtSystemStereotypeFontColor #718096 ' Lighter Gray for stereotype
}

title High-Level Architecture: Energy Compliance Analyzer

Person(user, "End User", "Uses the web application to upload data and view compliance reports.")

System_Boundary(eca_system, "Energy Compliance Analyzer System") {
    Container(frontend, "Frontend Web App", "Next.js, React, ShadCN", "Provides the UI for data upload, analysis visualization, and report interaction. Hosted on Firebase App Hosting.")
    Container(server_actions, "Backend API", "Next.js Server Actions", "Handles client requests, interacts with Firebase services, and orchestrates AI chat. Runs on Firebase App Hosting.")
    ContainerDb(firestore, "Main Database", "Firebase Firestore", "Stores analysis metadata, user data, and structured reports.")
    ContainerDb(rtdb, "Chat Database", "Firebase Realtime DB", "Stores real-time chat messages for report interaction.")
    ContainerDb(storage, "File Storage", "Firebase Storage", "Stores uploaded CSV files and generated MDX reports.")
    Container(functions, "Background Processing", "Firebase Functions", "Executes AI pipeline for data analysis and report generation.")
}

System_Ext(firebase_auth, "Firebase Authentication", "Handles user sign-in and identity management.")
System_Ext(gemini, "Google AI (Gemini)", "Provides generative AI models for analysis and chat.")

Rel(user, frontend, "Uses", "HTTPS")
Rel(frontend, server_actions, "Invokes", "HTTPS")
Rel(frontend, firebase_auth, "Authenticates via", "OAuth")

Rel_D(server_actions, firestore, "Reads/Writes Data")
Rel_D(server_actions, rtdb, "Manages Chat History")
Rel_D(server_actions, storage, "Accesses Report Files")
Rel_D(server_actions, gemini, "Orchestrates Report Chat via API")

Rel_D(functions, firestore, "Reads Data & Updates Analysis Status/Results")
Rel_D(functions, storage, "Reads CSV Files & Writes MDX Reports")
Rel_D(functions, gemini, "Performs AI Analysis & Report Generation via API")

' Relationship showing Firestore triggering Functions
Rel_Neighbor(firestore, functions, "Triggers Processing (on data change)")

@enduml
