
@startuml readme-architecture
!define GCP_SPRITES_LOCATION https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml

!define LIGHT_BLUE #E6F0FA
!define DARK_BLUE #3F51B5
!define ACCENT_ORANGE #FF9800
!define LIGHT_GRAY #F0F2F5
!define TEXT_COLOR #333333
!define TEXT_LIGHT_COLOR #FFFFFF

skinparam defaultFontName Inter
skinparam defaultMonospacedFontName "Menlo"
skinparam dpi 150
skinparam shadowing false

skinparam roundCorner 20
skinparam ArrowColor DARK_BLUE
skinparam ArrowThickness 1.5

skinparam actorBorderColor DARK_BLUE
skinparam actorBackgroundColor LIGHT_BLUE
skinparam actorFontColor TEXT_COLOR

skinparam usecaseBorderColor DARK_BLUE
skinparam usecaseBackgroundColor LIGHT_BLUE

skinparam boundaryBorderColor DARK_BLUE
skinparam boundaryBackgroundColor #FFFFFF

' C4 Element Styling
skinparam person {
  BackgroundColor LIGHT_BLUE
  BorderColor DARK_BLUE
  FontColor TEXT_COLOR
  Shadowing false
}
skinparam system {
  BackgroundColor LIGHT_BLUE
  BorderColor DARK_BLUE
  FontColor TEXT_COLOR
  Shadowing false
}
skinparam system_ext {
  BackgroundColor LIGHT_GRAY
  BorderColor #AAAAAA
  FontColor TEXT_COLOR
  Shadowing false
}
skinparam container {
  StereotypeFontColor TEXT_COLOR
  StereotypeFontSize 12
  FontColor TEXT_COLOR
  BorderColor DARK_BLUE
  BackgroundColor #FFFFFF
  Shadowing false
}
skinparam component {
  StereotypeFontColor TEXT_COLOR
  StereotypeFontSize 11
  FontColor TEXT_COLOR
  BorderColor DARK_BLUE
  BackgroundColor #F7F9FC
  Shadowing false
}
skinparam database {
  StereotypeFontColor TEXT_COLOR
  StereotypeFontSize 11
  FontColor TEXT_COLOR
  BorderColor DARK_BLUE
  BackgroundColor LIGHT_BLUE
  Shadowing false
}

' Specific styling for key elements
skinparam card {
  backgroundColor #FFFFFF
  borderColor DARK_BLUE
  roundCorner 20
  shadowing false
}
skinparam cloud {
    backgroundColor LIGHT_GRAY
    borderColor #CCCCCC
}

' Title
title
  <b>Energy Compliance Analyzer - High-Level Architecture</b>
  <font size=10>Verticalized System Overview</font>
end title

' Legend
legend right
  | Symbol | Description |
  |---|---|
  | <$person> | User |
  | <$system_ext> | External System |
  | <$system> | Software System (This App) |
  | <$container> | Container (App Hosting / Services) |
  | <$component> | Component |
  | <$database> | Database / Storage |
  | <color:DARK_BLUE><&arrow-right></color> | Data Flow / Interaction |
end legend

' Actors and External Systems
Person(user, "User", "End-user interacting with the application", $sprite="person")
System_Ext(aneel, "ANEEL", "Brazilian National Electrical Energy Agency (Source of Regulations)")

' Main System Boundary
System_Boundary(app_boundary, "Energy Compliance Analyzer System") {

  Boundary(app_hosting_boundary, "Firebase App Hosting", $tags="GCP") {
    Container(frontend, "Frontend Web App", "Next.js, React, ShadCN, Tailwind", "User interface for data upload, visualization, and interaction", $sprite="Mobile/Firebase.png")
    Container(server_actions, "Next.js Server Actions", "Node.js (Next.js)", "Handles API requests, triggers background tasks, orchestrates chat AI", $sprite="Mobile/Firebase.png")
  }

  Boundary(firebase_services_boundary, "Firebase Backend Services", $tags="GCP") {
    ContainerDbGCP(auth, "Firebase Authentication", "Authentication Service", "Manages user sign-in (Google) and identity", $sprite="Identity_Security/FirebaseAuthentication.png")
    ContainerDbGCP(firestore, "Firebase Firestore", "NoSQL Database", "Stores analysis metadata, status, user sessions, structured reports", $sprite="Databases/Firestore.png")
    ContainerDbGCP(storage, "Firebase Storage", "Object Storage", "Stores uploaded CSV files and generated MDX reports", $sprite="Storage/CloudStorage.png")
    ContainerDbGCP(rtdb, "Firebase Realtime DB", "NoSQL Database", "Stores chat history for real-time interaction", $sprite="Databases/FirebaseRealtimeDatabase.png")
    ContainerGCP(functions, "Firebase Functions", "Serverless Compute", "Executes AI processing pipeline for data analysis and report generation", $sprite="Compute/CloudFunctions.png")
  }

  SystemGCP_Ext(gemini, "Google AI (Gemini)", "Generative AI Model", "Powers AI agents for analysis, report generation, and chat", $sprite="AI_Machine_Learning/VertexAI.png")
}

' Relationships - Arranged for vertical flow where possible

user --> frontend : Interacts (Upload, View Reports, Chat)

frontend -> server_actions : API Calls (Start Upload, Fetch Data, Send Chat)
server_actions -> auth : Verifies User Identity
server_actions -> firestore : Manages Analysis Records, User Sessions
server_actions -> storage : (Indirectly) Manages File URLs
server_actions -> rtdb : Saves/Retrieves Chat Messages
server_actions -> gemini : Orchestrates Report Chat AI

server_actions -> functions : (Via Firestore Trigger) Initiates Background Analysis

functions -> storage : Reads CSV, Writes MDX Report
functions -> firestore : Updates Analysis Status, Saves Structured Report
functions -> gemini : Executes AI Analysis Pipeline (Summarizer, Engineer, Reviewer Agents)

app_boundary <.right. aneel : Consumes Regulations
app_boundary .up.> gemini : Uses AI Services

' Layout hints for vertical flow (may not be strictly enforced by PlantUML but can guide)
frontend -[hidden]D-> server_actions
server_actions -[hidden]D-> firebase_services_boundary
firebase_services_boundary -[hidden]D-> gemini


footer Generated on %date("dd.MM.yyyy HH:mm")
@enduml

    