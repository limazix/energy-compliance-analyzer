
@startuml readme_architecture
' Diagram Type: High-Level System Architecture (C4-Inspired)
' Firebase Functions as API Gateway Pattern

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5

!include DEVICONS/react.puml
!include DEVICONS/firebase.puml
!include DEVICONS/google_cloud_platform.puml
!include DEVICONS/javascript.puml
!include DEVICONS/nodejs.puml
!include FONTAWESOME/users.puml
!include FONTAWESOME/database.puml
!include FONTAWESOME/brain.puml
!include FONTAWESOME/file_alt.puml
!include FONTAWESOME/comments.puml
!include FONTAWESOME/cogs.puml
!include FONTAWESOME/lock.puml
!include FONTAWESOME/server.puml

!define PRIMARY_COLOR #3F51B5
!define ACCENT_COLOR #FF9800
!define LIGHT_ACCENT_BG #FFF3E0
!define LIGHT_GRAY_BG #F0F2F5
!define DARK_TEXT_COLOR #333333
!define LIGHT_BLUE_BG #EBF4FF
!define MUTED_BLUE_GRAY_BORDER #B0BEC5
!define DARK_BLUE_TEXT #1A237E
!define WHITE_BG #FFFFFF

skinparam linetype ortho

skinparam {
    DefaultFontName Inter
    DefaultFontSize 11
    RoundCorner 15
    Shadowing false
    ArrowColor #555555
    ArrowThickness 1.2
    Padding 5
    ActorStyle awesome
}

skinparam person {
    BackgroundColor LIGHT_BLUE_BG
    BorderColor PRIMARY_COLOR
    FontColor DARK_TEXT_COLOR
    StereotypeFontColor DARK_BLUE_TEXT
    LineThickness 1.5
    Sprite $fa_users
}

skinparam system_ext {
    BackgroundColor LIGHT_GRAY_BG
    BorderColor MUTED_BLUE_GRAY_BORDER
    FontColor DARK_TEXT_COLOR
    StereotypeFontColor DARK_BLUE_TEXT
    LineThickness 1.5
}

skinparam boundary {
    BorderColor PRIMARY_COLOR
    BackgroundColor #E8EAF6
    FontColor DARK_BLUE_TEXT
    StereotypeFontColor DARK_BLUE_TEXT
    LineThickness 2
    FontSize 12
}

skinparam container {
    BorderColor PRIMARY_COLOR
    BackgroundColor WHITE_BG
    FontColor DARK_TEXT_COLOR
    StereotypeFontColor PRIMARY_COLOR
    LineThickness 1.5
}
skinparam database {
    BorderColor PRIMARY_COLOR
    BackgroundColor WHITE_BG
    FontColor DARK_TEXT_COLOR
    StereotypeFontColor PRIMARY_COLOR
    LineThickness 1.5
}

skinparam rectangle<<AI_Related>> {
    BorderColor ACCENT_COLOR
    BackgroundColor LIGHT_ACCENT_BG
    FontColor #BF360C
    StereotypeFontColor #BF360C
}
skinparam agent<<AI_Related>> {
    BorderColor ACCENT_COLOR
    BackgroundColor LIGHT_ACCENT_BG
    FontColor #BF360C
    StereotypeFontColor #BF360C
}


LAYOUT_WITH_LEGEND()
top to bottom direction

Person(user, "End User", "Uploads data, views reports, interacts via chat.", $sprite="users")

System_Boundary(app, "EMA - Electric Magnitudes Analyser", "Google Cloud / Firebase Environment") {
    Boundary(b_app_hosting, "Layer: Client & API Layer (Firebase App Hosting)") {
        Container(frontend, "Frontend Web App", "Next.js, React, ShadCN, Tailwind", "UI for data upload, analysis visualization, and real-time report chat.", $sprite=$dev_react)
        Container(server_actions, "Next.js Server Actions", "Node.js", "API endpoints for frontend. Authenticates user, validates input, calls Firebase Functions.", $sprite=$dev_nodejs)
    }
    -[hidden]down->
    Boundary(b_firebase_backend, "Layer: Backend Logic & Services (Firebase Functions)") {
         Container(fb_functions, "Firebase Functions", "Node.js, Genkit", "API Gateway & Backend Logic. Handles all data operations, AI processing (pipeline & chat), and report generation.", $sprite=$dev_firebase) <<AI_Related>>
    }
    -[hidden]down->
    Boundary(b_firebase_data, "Layer: Data Storage (Firebase)") {
        Container(auth, "Firebase Authentication", "OAuth (Google Sign-In)", "Manages user authentication and identity.", $sprite=$fa_lock)
        ContainerDb(firestore, "Firebase Firestore", "NoSQL Document DB", "Stores analysis metadata, user session data, tags, structured reports.", $sprite=$fa_database)
        ContainerDb(storage, "Firebase Storage", "Object Storage", "Stores uploaded CSVs, generated MDX/PDF reports.", $sprite=$dev_firebase)
        ContainerDb(rtdb, "Firebase Realtime DB", "NoSQL JSON DB", "Manages real-time chat history.", $sprite=$fa_comments)
    }
}

System_Ext(gemini, "Google AI (Gemini)", "Generative AI Model. Used by Firebase Functions for analysis pipeline and chat responses.", $sprite=$fa_brain) <<AI_Related>>
System_Ext(aneel, "ANEEL", "Brazilian National Electrical Energy Agency. Provides Normative Resolutions (conceptual input).", $sprite=$fa_file_alt)

' Relationships
user --> frontend: "Interacts with"

frontend -right-> server_actions: "Invokes API calls (HTTPS)"
server_actions --> auth: "Verifies user ID Token"
server_actions -down-> fb_functions: "Invokes backend operations (HTTPS Callable Functions)"

fb_functions --> auth: "Validates user context (optional, server-side)"
fb_functions --> firestore: "CRUD for analysis records, tags, reports"
fb_functions --> storage: "Reads CSVs, Writes MDX/PDF reports"
fb_functions --> rtdb: "Manages chat messages (read/write)"
fb_functions --> gemini: "For analysis pipeline & report chat AI (via Genkit)"

firestore -[dashed,thickness=2,color=ACCENT_COLOR]-> fb_functions: "Events trigger analysis pipeline"

fb_functions .> aneel: "Uses ANEEL regulations (conceptual)"

' Positioning external systems
b_firebase_data -[hidden]down-> gemini
gemini -[hidden]down-> aneel

@enduml

    