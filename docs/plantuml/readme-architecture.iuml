@startuml readme_architecture
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml

title Energy Compliance Analyzer - High-Level Architecture
top to bottom direction

' Styling from PRD'
skinparam {
    shadowing false
    ArrowColor #555555
    BorderColor #555555
    ActorBorderColor #3F51B5
    ActorBackgroundColor #F0F2F5

    agent {
        BorderColor #3F51B5
        BackgroundColor #D1E0FF ' Light Blue for Agents'
    }
    Boundary { ' This skinparam should be fine if Boundary is defined by C4_Container.puml '
        BorderColor #3F51B5 ' Primary Blue for Boundaries'
        BackgroundColor #E8EAF6 ' Lighter Primary Blue'
        FontStyle bold
    }
    database {
        BorderColor #FF9800 ' Accent Orange for DBs'
        BackgroundColor #FFF3E0 ' Lighter Accent Orange'
    }
    component { ' Assuming Container is a type of component for styling '
        BorderColor #4CAF50 ' A distinct Green for components/containers'
        BackgroundColor #E8F5E9 ' Lighter Green'
    }
    rectangle {
      RoundCorner 20
    }
    node {
      RoundCorner 20
    }
    collections {
      RoundCorner 20
    }
    card {
      RoundCorner 20
    }
    package {
      RoundCorner 20
    }

    BackgroundColor #F0F2F5 ' Light gray background'
    FontName Inter, Helvetica, Arial, sans-serif
    DefaultTextAlignment center
}
hide stereotype


Person(user, "User", "Uploads CSV data, interacts with reports and chat.", $sprite="person")
System_Ext(aneel, "ANEEL", "Brazilian National Electrical Energy Agency (Regulatory Standards)", $sprite="gov_building")
SystemGCP_Ext(google_ai, "Google AI (Gemini)", "Provides AI models for analysis, summarization, and chat.", $sprite=$generic_machine_learning)

Boundary(b_app_hosting, "Firebase App Hosting", "Hosts Next.js Application") {
    Container(frontend, "Frontend Web App", "Next.js, React, ShadCN, Tailwind", "User Interface for data upload, visualization, and interaction.", $sprite="browser")
    ContainerGCP(server_actions, "Next.js Server Actions", "Node.js", "Backend API for frontend, triggers background processes, chat orchestration.", $sprite=$generic_api)
}

Boundary(b_firebase_platform, "Firebase Platform", "Backend Services & Processing") {
    ContainerGCP(auth, "Firebase Authentication", "Identity Management", "Handles user sign-in and authentication.", $sprite=$generic_security)
    ContainerDbGCP(firestore, "Firebase Firestore", "NoSQL Document DB", "Stores analysis metadata, status, structured reports, user data.", $sprite=$generic_database)
    ContainerDbGCP(storage, "Firebase Storage", "Object Storage", "Stores uploaded CSV files and generated MDX reports.", $sprite=$generic_storage)
    ContainerDbGCP(rtdb, "Firebase Realtime DB", "NoSQL JSON DB", "Stores chat messages for real-time interaction.", $sprite=$generic_database)
    ContainerGCP(functions, "Firebase Functions", "Serverless Compute", "Executes background AI processing pipeline (data analysis, report generation).", $sprite=$generic_serverless)
}

' Relationships'
user --> frontend : Interacts
frontend --> server_actions : Invokes (Uploads, Chat, Commands)

server_actions --> auth : Verifies User Identity
server_actions --> firestore : Manages Analysis Records & Chat Data
server_actions --> storage : Manages Report Files (indirectly)
server_actions --> rtdb : Manages Chat History
server_actions --> functions : Triggers Processing (via Firestore)
server_actions --> google_ai : Orchestrates Report Chat

functions --> storage : Reads CSV, Writes MDX Reports
functions --> firestore : Updates Analysis Status & Results
functions --> google_ai : Executes AI Analysis Pipeline

aneel -> functions : Informs Regulations (conceptually)
aneel -> server_actions : Informs Regulations (conceptually for chat context)

@enduml