
@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define GCP_SPRITES_LOCATION https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/GCPC4Integration.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Firebase/Firebase.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Compute/CloudFunctions.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Database/CloudFirestore.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Storage/CloudStorage.puml
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Database/CloudRealtimeDatabase.puml
!include https
//raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/Networking/CloudCDN.puml ' For App Hosting if needed
!include https://raw.githubusercontent.com/Crashedmind/PlantUML-icons-GCP/master/dist/VertexAI/VertexAI.puml


' Styling
skinparam defaultFontName Inter
skinparam dpi 150
skinparam roundCorner 10
skinparam shadowing false
skinparam handwritten false

skinparam rectangle {
    StereotypeFontSize 0
}

skinparam person {
    BackgroundColor #08427B
    FontColor #FFFFFF
    BorderColor #073B6F
}
skinparam system {
    BackgroundColor #4285F4
    FontColor #FFFFFF
    BorderColor #3367D6
    StereotypeFontColor #FFFFFF
}
skinparam system_ext {
    BackgroundColor #757575
    FontColor #FFFFFF
    BorderColor #616161
}
skinparam container {
    BackgroundColor #E3F2FD 
    FontColor #1E88E5
    BorderColor #90CAF9
    StereotypeFontColor #1E88E5
}
skinparam database {
    BackgroundColor #FFEBEE
    FontColor #D32F2F
    BorderColor #FFCDD2
    StereotypeFontColor #D32F2F
}
skinparam component {
    BackgroundColor #E8F5E9
    FontColor #2E7D32
    BorderColor #A5D6A7
}
skinparam arrow {
    Color #616161
    FontColor #616161
    FontSize 12
}

title High-Level Architecture: Energy Compliance Analyzer

Person(user, "Usuário", "Profissional do setor elétrico")

System_Boundary(app_boundary, "Energy Compliance Analyzer Application") {
    Container(frontend, "Frontend Web App", "Next.js, React, ShadCN", "Interface do usuário para upload, visualização e interação.")
    Container(server_actions, "Backend API", "Next.js Server Actions", "Gerencia uploads, interações de chat e orquestração.")
    ContainerDb(firestore, "Main Database", "Firebase Firestore", "Armazena metadados de análises, relatórios estruturados, tags.", $sprite=$firebase_cloud_firestore)
    ContainerDb(rtdb, "Chat Database", "Firebase Realtime DB", "Armazena histórico de chat em tempo real.", $sprite=$firebase_realtime_database)
    Container(functions, "Background Processing", "Firebase Functions", "Executa pipeline de IA para análise de dados e geração de relatórios.", $sprite=$firebase_cloud_functions)
    ContainerDb(storage, "File Storage", "Firebase Storage", "Armazena CSVs enviados e relatórios MDX gerados.", $sprite=$firebase_cloud_storage)
}

System_Ext(auth_service, "Firebase Authentication", "Autenticação de usuários", $sprite=$firebase_auth)
System_Ext(gemini, "Google AI (Gemini)", "LLM para análise de dados e geração de relatórios", $sprite=$vertex_ai)
System_Ext(aneel_regs, "Regulamentações ANEEL", "Fonte de normas e padrões para conformidade")


Rel(user, frontend, "Interage com", "HTTPS")
Rel(frontend, server_actions, "Chama ações para", "HTTPS (Server Actions)")
Rel(frontend, auth_service, "Autentica via", "Firebase SDK")
Rel(frontend, rtdb, "Sincroniza mensagens de chat com", "Firebase SDK")

Rel(server_actions, firestore, "Lê/Escreve metadados e relatórios em", "Firebase Admin SDK")
Rel(server_actions, storage, "Obtém caminhos de arquivos de", "Firebase Admin SDK")
Rel(server_actions, rtdb, "Grava mensagens de chat em", "Firebase Admin SDK")
Rel(server_actions, gemini, "Chama para orquestração de chat e IA", "Genkit")
Rel(server_actions, functions, "Dispara via Firestore (indireto)", "Firestore Triggers") ' Server actions modify Firestore, which triggers Functions

Rel(functions, storage, "Lê CSVs e grava MDX em", "Firebase Admin SDK")
Rel(functions, firestore, "Lê/Escreve status, progresso, resultados em", "Firebase Admin SDK")
Rel(functions, gemini, "Usa para pipeline de análise de IA", "Genkit")
Rel(functions, aneel_regs, "Consulta (implícito) para análise de conformidade")

@enduml
