@startuml readme-architecture
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include <tupadr3/common>
!include <tupadr3/devicons/react>
!include <tupadr3/devicons/google>
!include <tupadr3/font-awesome-6/server>
!include <tupadr3/font-awesome-6/database>
!include <tupadr3/font-awesome-6/file_cloud>
!include <tupadr3/font-awesome-6/bolt_lightning>
!include <tupadr3/font-awesome-6/brain_circuit>
!include <tupadr3/font-awesome-6/person>
!include <tupadr3/font-awesome-6/file_arrow_up>
!include <tupadr3/font-awesome-6/trash_can>
!include <tupadr3/font-awesome-6/share_nodes>
!include <tupadr3/font-awesome-6/gears>


title High-Level Architecture: Energy Compliance Analyzer (Event-Driven)

actor User <&person>

package "Web Application (Next.js on Firebase App Hosting)" {
  component "Frontend Web App" as Frontend <<Next.js/React>> <&react>
  component "Next.js Server Actions" as ServerActions <<API>> <&server>
}

package "Firebase & Google Cloud" {
  database "Firebase Firestore" as Firestore <&database>
  database "Firebase Storage" as Storage <&file_cloud>
  database "Firebase Realtime DB" as RTDB <&share_nodes>
  component "Firebase Auth" as Auth <&google>

  queue "Pub/Sub: File Upload Completed" as PubSubUpload <&file_arrow_up>
  queue "Pub/Sub: Analysis Deletion Request" as PubSubDelete <&trash_can>

  package "Firebase Functions" {
    component "onFileUploadCompleted\n(Pub/Sub Trigger)" as FuncUploadComplete <<Function>> <&bolt_lightning>
    component "processAnalysisOnUpdate\n(Firestore Trigger)" as FuncProcessAnalysis <<Function>> <&bolt_lightning>
    component "onAnalysisDeletionRequested\n(Pub/Sub Trigger)" as FuncDeletionRequest <<Function>> <&bolt_lightning>
    component "handleAnalysisDeletionRequest\n(Firestore Trigger)" as FuncHandleDelete <<Function>> <&bolt_lightning>
    component "HTTPS Callables\n(Chat, Tags, etc.)" as FuncHttps <<Function>> <&gears>
  }

  component "Google AI (Genkit/Gemini)" as GenAI <&brain_circuit>
}

' Relationships
User --> Frontend : Interacts via Browser
Frontend -> ServerActions : Invokes (Upload, Chat, Tags, Delete Req)
ServerActions -> Auth : Verifies User
ServerActions -> Firestore : (e.g., for initial record, tags, direct updates if any)
ServerActions -> RTDB : (e.g., initial chat messages by AI)
ServerActions -> GenAI : (e.g., for Chat Orchestrator)

' File Upload Flow (Client-Side direct to Storage, then Server Action notifies)
Frontend -> Storage : Uploads CSV File
ServerActions -> PubSubUpload : Publishes 'File Upload Completed' event

PubSubUpload --> FuncUploadComplete : Triggers
FuncUploadComplete -> Firestore : Updates Analysis (status: summarizing_data, fileURL)

' Main Analysis Flow (Event-Driven by Firestore)
Firestore -> FuncProcessAnalysis : Triggers on status update
FuncProcessAnalysis -> Storage : Reads CSV
FuncProcessAnalysis -> GenAI : AI Pipeline (Summarizer, Regulations, Compliance, Reviewer)
FuncProcessAnalysis -> Firestore : Saves structured report, updates status/progress
FuncProcessAnalysis -> Storage : Saves MDX report

' Deletion Flow (Event-Driven via Pub/Sub then Firestore)
ServerActions -> PubSubDelete : Publishes 'Analysis Deletion Request'
PubSubDelete --> FuncDeletionRequest : Triggers
FuncDeletionRequest -> Firestore : Updates Analysis (status: pending_deletion)

Firestore -> FuncHandleDelete : Triggers on 'pending_deletion'
FuncHandleDelete -> Storage : Deletes CSV & MDX files
FuncHandleDelete -> Firestore : Updates Analysis (status: deleted)

' Chat and Other HTTPS Functions
Frontend -> FuncHttps : (e.g., For operations not suitable for Server Actions directly, or complex backend logic)
FuncHttps -> Firestore : Read/Write
FuncHttps -> RTDB : Read/Write Chat
FuncHttps -> GenAI : (e.g., if chat logic is entirely in a Callable Function)


' General Service Usage
FuncProcessAnalysis <--> GenAI
FuncHttps <--> GenAI
FuncProcessAnalysis <--> Firestore
FuncProcessAnalysis <--> Storage
FuncHandleDelete <--> Firestore
FuncHandleDelete <--> Storage

Frontend <--> RTDB : Real-time Chat Sync
Frontend <--> Auth : Handles Authentication
Frontend <--> Firestore : (e.g., onSnapshot for Analysis list/details)


hide empty members
@enduml