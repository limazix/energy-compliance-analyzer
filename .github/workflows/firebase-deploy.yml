
name: Deploy to Firebase

on:
  push:
    branches:
      - main # Ou a branch que você usa para produção
  pull_request: # Adicionado para rodar testes em PRs para a main
    branches:
      - main

jobs:
  test: # Novo job para testes
    runs-on: ubuntu-latest
    permissions:
      contents: 'read' # Testes não precisam de write-access para o repo
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 

      - name: Install Next.js app dependencies
        run: npm ci
      
      - name: Install Firebase Functions dependencies
        run: npm ci --prefix functions

      - name: Build Firebase Functions (necessário para emuladores se functions são parte do teste)
        run: npm run build --prefix functions

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Run tests with Firebase Emulators
        run: npm test # Este script já usa firebase emulators:exec
        env:
          CI: true 
          # NEXT_PUBLIC_FIREBASE_PROJECT_ID for tests can be a specific test project ID or a secret
          # If your tests depend on this value for emulator connection, ensure it's set.
          # For emulators, the actual value of other Firebase config secrets might not be critical
          # if the SDK auto-connects to localhost, but they should be present if app code expects them.
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_API_KEY: "test-api-key" 
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: "localhost" 
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: "default-bucket" 
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: "test-sender-id"
          NEXT_PUBLIC_FIREBASE_APP_ID: "test-app-id" 
          # Ensure this matches the namespace used by your emulators in firebase.json if different
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: "http://localhost:9000?ns=${{ secrets.NEXT_PUBLIC_PROJECT_ID }}"


  build_and_deploy:
    needs: test 
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' 
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 

      - name: Install Next.js app dependencies
        run: npm ci

      - name: Build Next.js application
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }} 
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Google Cloud (Workload Identity Federation)
        id: auth 
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'

      - name: Deploy to Firebase App Hosting
        run: |
          # IMPORTANTE: Substitua YOUR_APP_HOSTING_BACKEND_ID pelo ID real do seu backend do App Hosting.
          # Você pode encontrá-lo no Firebase Console após o primeiro deploy manual ou criação do backend.
          firebase apphosting:backends:deploy YOUR_APP_HOSTING_BACKEND_ID \
            --project ${{ secrets.NEXT_PUBLIC_PROJECT_ID }} \
            --region us-central1 # Ajuste a região se necessário
            --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_path }} 

      - name: Install Firebase Functions dependencies
        run: npm ci --prefix functions

      - name: Build Firebase Functions
        run: npm run build --prefix functions

      - name: Deploy Firebase Functions
        run: |
          firebase deploy --only functions \
            --project ${{ secrets.NEXT_PUBLIC_PROJECT_ID }} \
            --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_path }}

      - name: Deploy Firebase Rules (Firestore, Storage, RTDB)
        run: |
          firebase deploy --only firestore:rules,storage:rules,database:rules \
            --project ${{ secrets.NEXT_PUBLIC_PROJECT_ID }} \
            --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_path }}

    # Segredos do GitHub Actions NECESSÁRIOS para o job build_and_deploy:
    # 1. Para autenticação GCP (Workload Identity Federation):
    #    - GCP_PROJECT_NUMBER: Número do seu projeto Google Cloud.
    #    - GCP_WORKLOAD_IDENTITY_POOL_ID: ID do seu Workload Identity Pool no GCP.
    #    - GCP_WORKLOAD_IDENTITY_PROVIDER_ID: ID do seu Provider dentro do pool.
    #    - GCP_SERVICE_ACCOUNT_EMAIL: Email da conta de serviço do GCP com permissões adequadas (Firebase App Hosting Admin, Cloud Functions Developer, Firebase Rules System, Service Account User, Service Account Token Creator, Cloud Build Editor).
    # 2. Para o build do Next.js e deploy do Firebase (variáveis NEXT_PUBLIC_*):
    #    - NEXT_PUBLIC_FIREBASE_API_KEY
    #    - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
    #    - NEXT_PUBLIC_FIREBASE_PROJECT_ID (O ID do seu projeto Firebase, ex: electric-magnitudes-analizer)
    #    - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
    #    - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
    #    - NEXT_PUBLIC_FIREBASE_APP_ID
    #    - NEXT_PUBLIC_GEMINI_API_KEY (Se usado diretamente pelo client Next.js. Se apenas no backend, configurar nas Functions).
    #    - NEXT_PUBLIC_FIREBASE_DATABASE_URL
    #    - NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID (Opcional)
    # 3. IMPORTANTE: Substitua 'YOUR_APP_HOSTING_BACKEND_ID' no passo de deploy do App Hosting.
    # 4. Para Firebase Functions: A API Key do Gemini (GEMINI_API_KEY) e outros secrets de runtime
    #    devem ser configurados diretamente no ambiente das suas Firebase Functions no Google Cloud Console
    #    (ex: via Secret Manager ou variáveis de ambiente da função).
    #    O workflow NÃO passa estes secrets para o runtime das functions.
    # 5. Para o passo de teste (job 'test'), a variável NEXT_PUBLIC_FIREBASE_DATABASE_URL
    #    usa o NEXT_PUBLIC_PROJECT_ID como namespace do emulador de RTDB. Certifique-se que
    #    o secret NEXT_PUBLIC_PROJECT_ID está definido, mesmo para testes.

    