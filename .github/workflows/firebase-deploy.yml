
name: Deploy to Firebase

on:
  push:
    branches:
      - main # Ou a branch que você usa para produção

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Necessário para autenticação com Google Cloud via Workload Identity Federation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Atualizado para Node 20 (usado nas Functions)

      - name: Install Next.js app dependencies
        run: npm ci

      - name: Build Next.js application
        run: npm run build
        env:
          # As variáveis NEXT_PUBLIC_* são usadas no runtime do cliente e devem ser
          # configuradas no ambiente do App Hosting. Para o build, placeholders podem ser usados
          # se o build falhar sem elas, mas o runtime usará as do App Hosting.
          NEXT_PUBLIC_FIREBASE_API_KEY: "dummy"
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: "dummy"
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: "electric-magnitudes-analizer"
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: "dummy"
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: "dummy"
          NEXT_PUBLIC_FIREBASE_APP_ID: "dummy"
          NEXT_PUBLIC_GEMINI_API_KEY: "dummy" # Usado pelas Functions, configure nos secrets do App Hosting/Functions

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Google Cloud (Workload Identity Federation)
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'

      - name: Deploy to Firebase App Hosting
        run: |
          # IMPORTANTE: Substitua YOUR_APP_HOSTING_BACKEND_ID pelo ID real do seu backend do App Hosting.
          # Você pode encontrá-lo no Firebase Console após o primeiro deploy manual ou criação do backend.
          firebase apphosting:backends:deploy YOUR_APP_HOSTING_BACKEND_ID \
            --project electric-magnitudes-analizer \
            --region us-central1 # Exemplo de região, ajuste se necessário
            --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_path }} # Necessário se Workload Identity usou impersonation

      - name: Install Firebase Functions dependencies
        run: npm ci --prefix functions

      - name: Build Firebase Functions
        run: npm run build --prefix functions

      - name: Deploy Firebase Functions
        run: |
          firebase deploy --only functions \
            --project electric-magnitudes-analizer \
            --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_path }}

      - name: Deploy Firebase Rules (Firestore & Storage)
        run: |
          firebase deploy --only firestore:rules,storage:rules \
            --project electric-magnitudes-analizer \
            --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_path }}

    # Segredos necessários no GitHub Actions:
    # GCP_PROJECT_NUMBER: Número do seu projeto Google Cloud.
    # GCP_WORKLOAD_IDENTITY_POOL_ID: ID do seu Workload Identity Pool.
    # GCP_WORKLOAD_IDENTITY_PROVIDER_ID: ID do seu Workload Identity Provider.
    # GCP_SERVICE_ACCOUNT_EMAIL: Email da conta de serviço do GCP com permissões:
    #    - Firebase App Hosting Admin (roles/firebaseapphosting.admin)
    #    - Firebase Functions Developer (roles/cloudfunctions.developer) ou Admin
    #    - Firebase Rules System (roles/firebaserules.system)
    #    - Service Account User (roles/iam.serviceAccountUser) - para a conta de serviço das Functions
    #    - Service Account Token Creator (roles/iam.serviceAccountTokenCreator) - para impersonate
    #    - Cloud Build Editor (roles/cloudbuild.builds.editor) - Functions usam Cloud Build
    # IMPORTANTE: Substitua 'YOUR_APP_HOSTING_BACKEND_ID' no passo de deploy do App Hosting.
```