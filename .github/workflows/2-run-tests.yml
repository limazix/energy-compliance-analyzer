
name: 2. Run Integration Tests

on:
  workflow_run:
    workflows: ["1. Build for Tests"]
    types:
      - completed

jobs:
  test_application:
    runs-on: ubuntu-latest
    environment: test # Define o ambiente para este job
    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: read
      actions: read # Required to download artifacts from other workflow runs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }} # Checkout the same commit that triggered workflow 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # Cache npm dependencies for the main app

      - name: Download Functions source and shared build artifact
        uses: actions/download-artifact@v4
        with:
          name: functions-src-and-shared-for-test
          path: functions
          run-id: ${{ github.event.workflow_run.id }} # Specify the run ID of the triggering workflow
          github-token: ${{ secrets.ARTIFACT_ACCESS_TOKEN }}

      - name: Install Next.js app dependencies
        run: npm ci

      - name: Install Firebase Functions dependencies
        run: npm ci --prefix functions

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Get Firebase CLI version
        id: firebase_version
        run: echo "CLI_VERSION=$(firebase --version)" >> $GITHUB_OUTPUT

      - name: Cache Firebase Emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ steps.firebase_version.outputs.CLI_VERSION }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-

      - name: Run tests with Firebase Emulators
        run: npm test
        env:
          CI: true
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          FIRESTORE_EMULATOR_HOST: ${{ secrets.FIRESTORE_EMULATOR_HOST }}
          FIREBASE_AUTH_EMULATOR_HOST: ${{ secrets.FIREBASE_AUTH_EMULATOR_HOST }}
          FIREBASE_STORAGE_EMULATOR_HOST: ${{ secrets.FIREBASE_STORAGE_EMULATOR_HOST }}
          FIREBASE_DATABASE_EMULATOR_HOST: ${{ secrets.FIREBASE_DATABASE_EMULATOR_HOST }}
          FUNCTIONS_EMULATOR_HOST: ${{ secrets.FUNCTIONS_EMULATOR_HOST }}
          FIREBASE_FUNCTIONS_EMULATOR_ORIGIN: ${{ secrets.FIREBASE_FUNCTIONS_EMULATOR_ORIGIN }}
          GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT }}
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          FIREBASE_PROJECT_ID_INTERNAL: ${{ secrets.GCLOUD_PROJECT }} # Assumes this should align with GCLOUD_PROJECT for emulators
          NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}

